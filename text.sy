use assets

FONTMAP_WIDTH :: 16
FONTMAP_HEIGHT :: 16

glyph_tile :: fn c: int -> (int, int) {
    //TODO(gu): The y is inverted in the engine somewhere.
    ret (rem(c, FONTMAP_WIDTH), (FONTMAP_HEIGHT - 1) - (c / FONTMAP_HEIGHT))
}

x_inc :: 0.42
x_scale_global :: 0.08
y_scale_global :: 0.1

draw_text :: fn x: float, y: float, scale: float, s: str, color: (float, float, float, float) {
    x := x
    chars :: as_chars(s)
    offset :: (as_float(len(chars)) - 1.) * x_scale_global * scale * 0.85 / 2.
    chars -> for_each' fn c: int -> {
        draw_char' x - offset, y, scale, c, color
        x += x_scale_global * scale * 0.85
    }
}

draw_char :: fn x: float, y: float, scale: float, c: int, color: (float, float, float, float) {
    c >= 0   <=> true
    c <= 256 <=> true // upper bound
    scale := (x_scale_global, y_scale_global) * scale
    l_gfx_sprite' assets.font, glyph_tile(c), (x, y), scale, color
}
